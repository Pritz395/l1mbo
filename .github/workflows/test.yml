name: Test

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  get-python-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.python-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Read Python version
        id: python-version
        run: |
          echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

  test:
    needs: get-python-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13', '${{ needs.get-python-version.outputs.version }}']
      fail-fast: false  # Continue testing other versions if one fails
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          uv sync --all-groups --locked
      
      - name: Run tests
        run: |
          uv run pytest -v